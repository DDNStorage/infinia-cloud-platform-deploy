name: Deploy Infinia Infrastructure

on:
  push:
    branches:
      - add-infinia-deploy-pipeline
  # workflow_dispatch:
  #   inputs:
  #     infinia_deployment_name:
  #       description: "Deployment Name for Infinia"
  #       required: true
  #       type: string
  #     infinia_version:
  #       description: "Infinia Version"
  #       required: true
  #       type: string

env:
  AWS_REGION: us-east-1
  INFRA_DIR: deployments/aws  

jobs:
  Infinia-deployment:
    name: Deploy Infinia on AWS
    runs-on: small-dynamic-amd64-u24

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ${{ env.INFRA_DIR }}
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        working-directory: ${{ env.INFRA_DIR }}
        run: terraform plan -var-file=terraform.tfvars -var="infinia_deployment_name=yantest" -out=tfplan

      - name: Terraform Apply
        working-directory: ${{ env.INFRA_DIR }}
        run: terraform apply -var-file=terraform.tfvars -var="infinia_deployment_name=yantest" -auto-approve tfplan

      - name: Setup Ansible
        run: |
          sudo apt update && sudo apt install software-properties-common -y
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible
          pip install --upgrade ansible-core ansible boto3 botocore
          curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
          sudo dpkg -i session-manager-plugin.deb
      
      - name: Run Ansible playbook
        working-directory: ${{ env.INFRA_DIR }}/ansible
        run: |
          echo ${{ secrets.ANSIBLE_VAULT }} > vault_pass
          ansible-playbook main.yml -i aws_ec2.yml --vault-password-file vault_pass -vv